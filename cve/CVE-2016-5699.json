{
    "Modified": "2016-12-23T21:59:41.903000",
    "Published": "2016-09-02T10:59:07.003000",
    "access": {
        "authentication": "NONE",
        "complexity": "MEDIUM",
        "vector": "NETWORK"
    },
    "capec": [
        {
            "id": "31",
            "name": "Accessing/Intercepting/Modifying HTTP Cookies",
            "prerequisites": "Target server software must be a HTTP daemon that relies on cookies.",
            "related_weakness": [
                "565",
                "302",
                "311",
                "113",
                "539",
                "20",
                "315",
                "384",
                "472",
                "724",
                "602",
                "642"
            ],
            "solutions": "Design: Use input validation for cookies\nDesign: Generate and validate MAC for cookies\nImplementation: Use SSL/TLS to protect cookie in transit\nImplementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software.",
            "summary": "This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems.\nThe first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein.\nThe second form of this attack involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the attacker to impersonate the remote user/session.\nThe third form is when the cookie's content is modified by the attacker before it is sent back to the server. Here the attacker seeks to convince the target server to operate on this falsified information."
        },
        {
            "id": "34",
            "name": "HTTP Response Splitting",
            "prerequisites": "User-controlled input used as part of HTTP header\nAbility of attacker to inject custom strings in HTTP header\nInsufficient input validation in application to check for input sanity before using it as part of response header",
            "related_weakness": [
                "113",
                "697",
                "707",
                "713",
                "74"
            ],
            "solutions": "To avoid HTTP Response Splitting, the application must not rely on user-controllable input to form part of its output response stream. Specifically, response splitting occurs due to injection of CR-LF sequences and additional headers. All data arriving from the user and being used as part of HTTP response headers must be subjected to strict validation that performs simple character-based as well as semantic filtering to strip it of malicious character sequences and headers.",
            "summary": "This attack uses a maliciously-crafted HTTP request in order to cause a vulnerable web server to respond with an HTTP response stream that will be interpreted by the client as two separate responses instead of one. This is possible when user-controlled input is used unvalidated as part of the response headers. The target software, the client, will interpret the injected header as being a response to a second request, thereby causing the maliciously-crafted contents be displayed and possibly cached.\nTo achieve HTTP Response Splitting on a vulnerable web server, the attacker:"
        },
        {
            "id": "63",
            "name": "Simple Script Injection",
            "prerequisites": "Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser",
            "related_weakness": [
                "79",
                "20",
                "184",
                "96",
                "113",
                "348",
                "116",
                "350",
                "86",
                "602",
                "692",
                "697",
                "713",
                "71"
            ],
            "solutions": "Design: Use browser technologies that do not allow client side scripting.\nDesign: Utilize strict type, character, and encoding enforcement\nDesign: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.\nImplementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.\nImplementation: Perform input validation for all remote content.\nImplementation: Perform output validation for all remote content.\nImplementation: Session tokens for specific host\nImplementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.",
            "summary": "An attacker embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level.\nAn attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect."
        },
        {
            "id": "85",
            "name": "AJAX Fingerprinting",
            "prerequisites": "The user must allow JavaScript to execute in their browser",
            "related_weakness": [
                "79",
                "113",
                "348",
                "96",
                "20",
                "116",
                "184",
                "86",
                "712",
                "692"
            ],
            "solutions": "Design: Use browser technologies that do not allow client side scripting.\nDesign: Utilize strict type, character, and encoding enforcement\nImplementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.\nImplementation: Perform input validation for all remote content.\nImplementation: Perform output validation for all remote content.\nImplementation: Disable scripting languages such as JavaScript in browser\nImplementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.",
            "summary": "This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. In many XSS attacks the attacker must get a \"hole in one\" and successfully exploit the vulnerability on the victim side the first time, once the client is redirected the attacker has many chances to engage in follow on probes, but there is only one first chance. In a widely used web application this is not a major problem because 1 in a 1,000 is good enough in a widely used application.\nA common first step for an attacker is to footprint the environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on."
        }
    ],
    "cvss": "4.3",
    "cvss-time": "2016-09-02T15:19:47.990000",
    "cwe": "CWE-113",
    "id": "CVE-2016-5699",
    "impact": {
        "availability": "NONE",
        "confidentiality": "NONE",
        "integrity": "PARTIAL"
    },
    "last-modified": "2019-02-09T06:29:01.823000",
    "nessus": [
        {
            "NASL family": "FreeBSD Local Security Checks",
            "NASL id": "FREEBSD_PKG_A61374FC3A4D11E6A67160A44CE6887B.NASL",
            "description": "Guido Vranken reports :\n\nHTTP header injection in urrlib2/urllib/httplib/http.client with newlines in header values, where newlines have a semantic consequence of denoting the start of an additional header line.",
            "last seen": "2019-02-21",
            "modified": "2018-11-23",
            "plugin id": "91911",
            "published": "2016-07-01",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=91911",
            "title": "FreeBSD : Python -- HTTP Header Injection in Python urllib (a61374fc-3a4d-11e6-a671-60a44ce6887b)"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2016-EF784CF9F7.NASL",
            "description": "Security fix for CVE-2016-5699\n\n----\n\nSecurity fix for CVE-2016-0772\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora update system website.\nTenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2016-10-18",
            "plugin id": "92301",
            "published": "2016-07-15",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92301",
            "title": "Fedora 23 : python3 (2016-ef784cf9f7)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_SU-2019-0223-1.NASL",
            "description": "This update for python fixes the following issues :\n\nSecurity issues fixed :\n\nCVE-2016-0772: smtplib vulnerability opens startTLS stripping attack (bsc#984751)\n\nCVE-2016-5636: heap overflow when importing malformed zip files (bsc#985177)\n\nCVE-2016-5699: incorrect validation of HTTP headers allow header injection (bsc#985348)\n\nCVE-2016-1000110: HTTPoxy vulnerability in urllib, fixed by disregarding HTTP_PROXY when REQUEST_METHOD is also set (bsc#989523)\n\nCVE-2019-5010: Fixed a denial-of-service vulnerability in the X509 certificate parser (bsc#1122191)\n\nNote that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2019-02-04",
            "plugin id": "121570",
            "published": "2019-02-04",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=121570",
            "title": "SUSE SLES12 Security Update : python (SUSE-SU-2019:0223-1) (httpoxy)"
        },
        {
            "NASL family": "Scientific Linux Local Security Checks",
            "NASL id": "SL_20160818_PYTHON_ON_SL6_X.NASL",
            "description": "Security Fix(es) :\n\n  - It was discovered that the Python CGIHandler class did     not properly protect against the HTTP_PROXY variable     name clash in a CGI context. A remote attacker could     possibly use this flaw to redirect HTTP requests     performed by a Python CGI script to an     attacker-controlled proxy via a malicious HTTP request.\n    (CVE-2016-1000110)\n\n  - It was found that Python's smtplib library did not     return an exception when StartTLS failed to be     established in the SMTP.starttls() function. A man in     the middle attacker could strip out the STARTTLS command     without generating an exception on the Python SMTP     client application, preventing the establishment of the     TLS layer. (CVE-2016-0772)\n\n  - It was found that the Python's httplib library (used by     urllib, urllib2 and others) did not properly check     HTTPConnection.putheader() function arguments. An     attacker could use this flaw to inject additional     headers in a Python application that allowed user     provided header names or values. (CVE-2016-5699)",
            "last seen": "2019-02-21",
            "modified": "2018-12-28",
            "plugin id": "93072",
            "published": "2016-08-22",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93072",
            "title": "Scientific Linux Security Update : python on SL6.x, SL7.x i386/x86_64 (httpoxy)"
        },
        {
            "NASL family": "Red Hat Local Security Checks",
            "NASL id": "REDHAT-RHSA-2016-1626.NASL",
            "description": "An update for python is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.\n\nRed Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems.\n\nSecurity Fix(es) :\n\n* It was discovered that the Python CGIHandler class did not properly protect against the HTTP_PROXY variable name clash in a CGI context. A remote attacker could possibly use this flaw to redirect HTTP requests performed by a Python CGI script to an attacker-controlled proxy via a malicious HTTP request. (CVE-2016-1000110)\n\n* It was found that Python's smtplib library did not return an exception when StartTLS failed to be established in the SMTP.starttls() function. A man in the middle attacker could strip out the STARTTLS command without generating an exception on the Python SMTP client application, preventing the establishment of the TLS layer. (CVE-2016-0772)\n\n* It was found that the Python's httplib library (used by urllib, urllib2 and others) did not properly check HTTPConnection.putheader() function arguments. An attacker could use this flaw to inject additional headers in a Python application that allowed user provided header names or values. (CVE-2016-5699)\n\nRed Hat would like to thank Scott Geary (VendHQ) for reporting CVE-2016-1000110.",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "93039",
            "published": "2016-08-19",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93039",
            "title": "RHEL 6 / 7 : python (RHSA-2016:1626) (httpoxy)"
        },
        {
            "NASL family": "CentOS Local Security Checks",
            "NASL id": "CENTOS_RHSA-2016-1626.NASL",
            "description": "An update for python is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.\n\nRed Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems.\n\nSecurity Fix(es) :\n\n* It was discovered that the Python CGIHandler class did not properly protect against the HTTP_PROXY variable name clash in a CGI context. A remote attacker could possibly use this flaw to redirect HTTP requests performed by a Python CGI script to an attacker-controlled proxy via a malicious HTTP request. (CVE-2016-1000110)\n\n* It was found that Python's smtplib library did not return an exception when StartTLS failed to be established in the SMTP.starttls() function. A man in the middle attacker could strip out the STARTTLS command without generating an exception on the Python SMTP client application, preventing the establishment of the TLS layer. (CVE-2016-0772)\n\n* It was found that the Python's httplib library (used by urllib, urllib2 and others) did not properly check HTTPConnection.putheader() function arguments. An attacker could use this flaw to inject additional headers in a Python application that allowed user provided header names or values. (CVE-2016-5699)\n\nRed Hat would like to thank Scott Geary (VendHQ) for reporting CVE-2016-1000110.",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "93029",
            "published": "2016-08-19",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93029",
            "title": "CentOS 6 / 7 : python (CESA-2016:1626) (httpoxy)"
        },
        {
            "NASL family": "Oracle Linux Local Security Checks",
            "NASL id": "ORACLELINUX_ELSA-2016-1626.NASL",
            "description": "From Red Hat Security Advisory 2016:1626 :\n\nAn update for python is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.\n\nRed Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language, which includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems.\n\nSecurity Fix(es) :\n\n* It was discovered that the Python CGIHandler class did not properly protect against the HTTP_PROXY variable name clash in a CGI context. A remote attacker could possibly use this flaw to redirect HTTP requests performed by a Python CGI script to an attacker-controlled proxy via a malicious HTTP request. (CVE-2016-1000110)\n\n* It was found that Python's smtplib library did not return an exception when StartTLS failed to be established in the SMTP.starttls() function. A man in the middle attacker could strip out the STARTTLS command without generating an exception on the Python SMTP client application, preventing the establishment of the TLS layer. (CVE-2016-0772)\n\n* It was found that the Python's httplib library (used by urllib, urllib2 and others) did not properly check HTTPConnection.putheader() function arguments. An attacker could use this flaw to inject additional headers in a Python application that allowed user provided header names or values. (CVE-2016-5699)\n\nRed Hat would like to thank Scott Geary (VendHQ) for reporting CVE-2016-1000110.",
            "last seen": "2019-02-21",
            "modified": "2018-07-25",
            "plugin id": "93034",
            "published": "2016-08-19",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93034",
            "title": "Oracle Linux 6 / 7 : python (ELSA-2016-1626) (httpoxy)"
        },
        {
            "NASL family": "Amazon Linux Local Security Checks",
            "NASL id": "ALA_ALAS-2016-724.NASL",
            "description": "It was found that Python's httplib library (used urllib, urllib2 and others) did not properly check HTTP header input in HTTPConnection.putheader(). An attacker could use this flow to inject additional headers in a Python application that allows user provided header name or values. (CVE-2016-5699)\n\nIt was found that Python's smtplib library did not return an exception if StartTLS fails to establish correctly in the SMTP.starttls() function. An attacker with ability to launch an active man in the middle attack could strip out the STARTTLS command without generating an exception on the python SMTP client application, preventing the establishment of the TLS layer. (CVE-2016-0772)\n\nA vulnerability was discovered in Python, in the built-in zipimporter.\nA specially crafted zip file placed in a module path such that it would be loaded by a later 'import' statement could cause a heap overflow, leading to arbitrary code execution. (CVE-2016-5636)",
            "last seen": "2019-02-21",
            "modified": "2018-04-18",
            "plugin id": "92471",
            "published": "2016-07-21",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92471",
            "title": "Amazon Linux AMI : python26 / python27,python34 (ALAS-2016-724)"
        },
        {
            "NASL family": "Debian Local Security Checks",
            "NASL id": "DEBIAN_DLA-1663.NASL",
            "description": "This DLA fixes a a problem parsing x509 certificates, an pickle integer overflow, and some other minor issues :\n\nCVE-2016-0772\n\nThe smtplib library in CPython does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a 'StartTLS stripping attack.'\n\nCVE-2016-5636\n\nInteger overflow in the get_data function in zipimport.c in CPython allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.\n\nCVE-2016-5699\n\nCRLF injection vulnerability in the HTTPConnection.putheader function in urllib2 and urllib in CPython allows remote attackers to inject arbitrary HTTP headers via CRLF sequences in a URL.\n\nCVE-2018-20406\n\nModules/_pickle.c has an integer overflow via a large LONG_BINPUT value that is mishandled during a 'resize to twice the size' attempt.\nThis issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data.\n\nCVE-2019-5010\n\nNULL pointer dereference using a specially crafted X509 certificate.\n\nFor Debian 8 'Jessie', these problems have been fixed in version 3.4.2-1+deb8u2.\n\nWe recommend that you upgrade your python3.4 packages.\n\nNOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2019-02-08",
            "plugin id": "122036",
            "published": "2019-02-08",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=122036",
            "title": "Debian DLA-1663-1 : python3.4 security update"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2016-6C2B74BB96.NASL",
            "description": "Security fixes for CVE-2016-0772 and CVE-2016-5699\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora update system website.\nTenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2016-10-18",
            "plugin id": "92254",
            "published": "2016-07-15",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92254",
            "title": "Fedora 24 : pypy3 (2016-6c2b74bb96)"
        },
        {
            "NASL family": "Debian Local Security Checks",
            "NASL id": "DEBIAN_DLA-522.NASL",
            "description": "- CVE-2016-0772 A vulnerability in smtplib allowing MITM     attacker to perform a startTLS stripping attack. smtplib     does not seem to raise an exception when the remote end     (smtp server) is capable of negotiating starttls but     fails to respond with 220 (ok) to an explicit call of     SMTP.starttls(). This may allow a malicious MITM to     perform a startTLS stripping attack if the client code     does not explicitly check the response code for     startTLS.\n\n  - CVE-2016-5636 Issue #26171: Fix possible integer     overflow and heap corruption in zipimporter.get_data().\n\n  - CVE-2016-5699 Protocol injection can occur not only if     an application sets a header based on user-supplied     values, but also if the application ever tries to fetch     a URL specified by an attacker (SSRF case) OR if the     application ever accesses any malicious web server     (redirection case).\n\nFor Debian 7 'Wheezy', these problems have been fixed in version 2.7.3-6+deb7u3.\n\nWe recommend that you upgrade your python2.7 packages.\n\nNOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-07-06",
            "plugin id": "91733",
            "published": "2016-06-22",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=91733",
            "title": "Debian DLA-522-1 : python2.7 security update"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2016-906.NASL",
            "description": "Python was updated to fix three security issues.\n\nThe following vulnerabilities were fixed :\n\n  - CVE-2016-0772: TLS stripping attack on smtplib     (bsc#984751)\n\n  - CVE-2016-5636: zipimporter heap overflow (bsc#985177)\n\n  - CVE-2016-5699: httplib header injection (bsc#985348)\n\nThis update also includes all upstream bug fixes and improvements in Python 2.7.12.\n\nIt also includes the following packaging changes :\n\n  - reintroduce support for CA directory path\n\nThe following tracked packaging issues were fixed :\n\n  - broken overflow checks (bsc#964182)",
            "last seen": "2019-02-21",
            "modified": "2016-10-13",
            "plugin id": "92595",
            "published": "2016-07-28",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92595",
            "title": "openSUSE Security Update : python (openSUSE-2016-906)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_SU-2016-2270-1.NASL",
            "description": "This update for python fixes the following issues :\n\n  - CVE-2016-0772: smtplib vulnerability opens startTLS     stripping attack (bsc#984751)\n\n  - CVE-2016-5699: incorrect validation of HTTP headers     allow header injection (bsc#985348)\n\n  - CVE-2016-1000110: HTTPoxy vulnerability in urllib, fixed     by disregarding HTTP_PROXY when REQUEST_METHOD is also     set (bsc#989523)\n\nNote that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-29",
            "plugin id": "93438",
            "published": "2016-09-12",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93438",
            "title": "SUSE SLES11 Security Update : python (SUSE-SU-2016:2270-1) (httpoxy)"
        },
        {
            "NASL family": "Ubuntu Local Security Checks",
            "NASL id": "UBUNTU_USN-3134-1.NASL",
            "description": "It was discovered that the smtplib library in Python did not return an error when StartTLS fails. A remote attacker could possibly use this to expose sensitive information. (CVE-2016-0772)\n\nRemi Rampin discovered that Python would not protect CGI applications from contents of the HTTP_PROXY environment variable when based on the contents of the Proxy header from HTTP requests. A remote attacker could possibly use this to cause a CGI application to redirect outgoing HTTP requests. (CVE-2016-1000110)\n\nInsu Yun discovered an integer overflow in the zipimporter module in Python that could lead to a heap-based overflow. An attacker could use this to craft a special zip file that when read by Python could possibly execute arbitrary code. (CVE-2016-5636)\n\nGuido Vranken discovered that the urllib modules in Python did not properly handle carriage return line feed (CRLF) in headers. A remote attacker could use this to craft URLs that inject arbitrary HTTP headers. This issue only affected Ubuntu 12.04 LTS and Ubuntu 14.04 LTS. (CVE-2016-5699).\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-12-01",
            "plugin id": "95284",
            "published": "2016-11-23",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=95284",
            "title": "Ubuntu 12.04 LTS / 14.04 LTS / 16.04 LTS : python2.7, python3.2, python3.4, python3.5 vulnerabilities (USN-3134-1) (httpoxy)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_SU-2016-2859-1.NASL",
            "description": "This update provides Python 3.4.5, which brings many fixes and enhancements. The following security issues have been fixed :\n\n  - CVE-2016-1000110: CGIHandler could have allowed setting     of HTTP_PROXY environment variable based on     user-supplied Proxy request header. (bsc#989523)\n\n  - CVE-2016-0772: A vulnerability in smtplib could have     allowed a MITM attacker to perform a startTLS stripping     attack. (bsc#984751)\n\n  - CVE-2016-5636: A heap overflow in Python's zipimport     module. (bsc#985177)\n\n  - CVE-2016-5699: A header injection flaw in     urrlib2/urllib/httplib/http.client. (bsc#985348) The     update also includes the following non-security fixes :\n\n  - Don't force 3rd party C extensions to be built with\n\n    -Werror=declaration-after-statement. (bsc#951166)\n\n  - Make urllib proxy var handling behave as usual on POSIX.\n    (bsc#983582) For a comprehensive list of changes please     refer to the upstream change log:\n    https://docs.python.org/3.4/whatsnew/changelog.html\n\nNote that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-29",
            "plugin id": "94969",
            "published": "2016-11-18",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=94969",
            "title": "SUSE SLED12 / SLES12 Security Update : python3 (SUSE-SU-2016:2859-1) (httpoxy)"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2016-B046B56518.NASL",
            "description": "Security fixes for CVE-2016-0772 and CVE-2016-5699\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora update system website.\nTenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2016-10-18",
            "plugin id": "92281",
            "published": "2016-07-15",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92281",
            "title": "Fedora 22 : pypy3 (2016-b046b56518)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_SU-2016-2106-1.NASL",
            "description": "This update for python fixes the following issues :\n\n  - CVE-2016-0772: smtplib vulnerability opens startTLS     stripping attack (bsc#984751)\n\n  - CVE-2016-5636: heap overflow when importing malformed     zip files (bsc#985177)\n\n  - CVE-2016-5699: incorrect validation of HTTP headers     allow header injection (bsc#985348)\n\n  - CVE-2016-1000110: HTTPoxy vulnerability in urllib, fixed     by disregarding HTTP_PROXY when REQUEST_METHOD is also     set (bsc#989523)\n\nNote that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-29",
            "plugin id": "93300",
            "published": "2016-09-02",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93300",
            "title": "SUSE SLED12 / SLES12 Security Update : python (SUSE-SU-2016:2106-1) (httpoxy)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2016-997.NASL",
            "description": "This update for python3 fixes the following issues :\n\n  - apply fix for CVE-2016-1000110 - CGIHandler: sets     environmental variable based on user-supplied Proxy     request header (fixes boo#989523, CVE-2016-1000110)\n\n  - update to 3.4.5 check:\n    https://docs.python.org/3.4/whatsnew/changelog.html     (fixes boo#984751, CVE-2016-0772) (fixes boo#985177,     CVE-2016-5636) (fixes boo#985348, CVE-2016-5699)\n\n  - Bump DH parameters to 2048 bit to fix logjam security     issue. boo#935856\n\n  - apply fix for CVE-2016-1000110 - CGIHandler: sets     environmental variable based on user-supplied Proxy     request header: (fixes boo#989523, CVE-2016-1000110)",
            "last seen": "2019-02-21",
            "modified": "2016-10-24",
            "plugin id": "93069",
            "published": "2016-08-22",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93069",
            "title": "openSUSE Security Update : python3 (openSUSE-2016-997) (httpoxy)"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2016-34CA5273E9.NASL",
            "description": "Security fixes for CVE-2016-0772 and CVE-2016-5699\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora update system website.\nTenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2016-10-18",
            "plugin id": "92240",
            "published": "2016-07-15",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=92240",
            "title": "Fedora 23 : pypy3 (2016-34ca5273e9)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_SU-2016-2653-1.NASL",
            "description": "This update provides Python 3.4.5, which brings many fixes and enhancements. The following security issues have been fixed :\n\n  - CVE-2016-1000110: CGIHandler could have allowed setting     of HTTP_PROXY environment variable based on     user-supplied Proxy request header. (bsc#989523)\n\n  - CVE-2016-0772: A vulnerability in smtplib could have     allowed a MITM attacker to perform a startTLS stripping     attack. (bsc#984751)\n\n  - CVE-2016-5636: A heap overflow in Python's zipimport     module. (bsc#985177)\n\n  - CVE-2016-5699: A header injection flaw in     urrlib2/urllib/httplib/http.client. (bsc#985348) The     update also includes the following non-security fixes :\n\n  - Don't force 3rd party C extensions to be built with\n\n    -Werror=declaration-after-statement. (bsc#951166)\n\n  - Make urllib proxy var handling behave as usual on POSIX.\n    (bsc#983582) For a comprehensive list of changes please     refer to the upstream change log:\n    https://docs.python.org/3.4/whatsnew/changelog.html\n\nNote that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2019-01-02",
            "plugin id": "94321",
            "published": "2016-10-27",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=94321",
            "title": "SUSE SLED12 / SLES12 Security Update : python3 (SUSE-SU-2016:2653-1) (httpoxy)"
        },
        {
            "NASL family": "CGI abuses",
            "NASL id": "SPLUNK_650.NASL",
            "description": "According to its self-reported version number, the version of Splunk Enterprise hosted on the remote web server is 5.0.x prior to 5.0.17, 6.0.x prior to 6.0.13, 6.1.x prior to 6.1.12, 6.2.x prior to 6.2.12, 6.3.x prior to 6.3.8, or 6.4.x prior to 6.4.4; or else it is Splunk Light prior to 6.5.0. It is, therefore, affected by multiple vulnerabilities :\n\n  - A heap buffer overflow condition exists in Python,     specifically in the get_data() function within file     Modules/zipimport.c, due to improper validation of     user-supplied input. An unauthenticated, remote attacker     can exploit this, via negative data size values, to     cause a denial of service condition or the possible     execution of arbitrary code. (CVE-2016-5636)\n\n  - A CRLF injection vulnerability exists in Python,     specifically in the HTTPConnection.putheader() function     within file Modules/zipimport.c. An unauthenticated,     remote attacker can exploit this to inject arbitrary     HTTP headers via CRLF sequences in a URL, allowing     cross-site scripting (XSS) and other attacks.\n    (CVE-2016-5699)\n\n  - A flaw exists in Python within the smtplib library due     to a failure to properly raise exceptions when smtp     servers are able to negotiate starttls but fail to     respond properly. A man-in-the-middle attacker can     exploit this issue to bypass TLS protections via a     'StartTLS stripping attack.' (CVE-2016-0772)\n\n  - An HTTP request injection vulnerability exists in Splunk     that permits leakage of authentication tokens. An     unauthenticated, remote attacker can exploit this to     access the Splunk REST API with the same rights as the     user.\n\nNote that the Python vulnerabilities stated above do not affect the Splunk Enterprise 6.4.x versions, and the HTTP request injection vulnerability does not affect the Splunk Light versions.",
            "last seen": "2019-02-21",
            "modified": "2019-01-02",
            "plugin id": "94932",
            "published": "2016-11-17",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=94932",
            "title": "Splunk Enterprise < 5.0.17 / 6.0.13 / 6.1.12 / 6.2.12 / 6.3.8 / 6.4.4 or Splunk Light < 6.5.0 Multiple Vulnerabilities"
        },
        {
            "NASL family": "OracleVM Local Security Checks",
            "NASL id": "ORACLEVM_OVMSA-2016-0099.NASL",
            "description": "The remote OracleVM system is missing necessary patches to address critical security updates :\n\n  - Add Oracle Linux distribution in platform.py [orabug     21288328] (Keshav Sharma)\n\n  - Fix for CVE-2016-1000110 HTTPoxy attack Resolves:\n    rhbz#1359161\n\n  - Fix for CVE-2016-0772 python: smtplib StartTLS stripping     attack (rhbz#1303647) Raise an error when STARTTLS fails     (upstream patch)\n\n  - Fix for CVE-2016-5699 python: http protocol steam     injection attack (rhbz#1303699) Disabled HTTP header     injections in httplib (upstream patch) Resolves:\n    rhbz#1346354",
            "last seen": "2019-02-21",
            "modified": "2018-07-24",
            "plugin id": "93038",
            "published": "2016-08-19",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=93038",
            "title": "OracleVM 3.3 / 3.4 : python (OVMSA-2016-0099) (httpoxy)"
        },
        {
            "NASL family": "Huawei Local Security Checks",
            "NASL id": "EULEROS_SA-2016-1036.NASL",
            "description": "According to the versions of the python packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :\n\n  - It was discovered that the Python CGIHandler class did     not properly protect against the HTTP_PROXY variable     name clash in a CGI context. A remote attacker could     possibly use this flaw to redirect HTTP requests     performed by a Python CGI script to an     attacker-controlled proxy via a malicious HTTP request.\n    (CVE-2016-1000110)\n\n  - It was found that Python's smtplib library did not     return an exception when StartTLS failed to be     established in the SMTP.starttls() function. A man in     the middle attacker could strip out the STARTTLS     command without generating an exception on the Python     SMTP client application, preventing the establishment     of the TLS layer. (CVE-2016-0772)\n\n  - It was found that the Python's httplib library (used by     urllib, urllib2 and others) did not properly check     HTTPConnection.putheader() function arguments. An     attacker could use this flaw to inject additional     headers in a Python application that allowed user     provided header names or values. (CVE-2016-5699)\n\nNote that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-14",
            "plugin id": "99799",
            "published": "2017-05-01",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=99799",
            "title": "EulerOS 2.0 SP1 : python (EulerOS-SA-2016-1036)"
        }
    ],
    "packetstorm": [
        {
            "data source": "https://packetstormsecurity.com/files/download/137651/ruby-httpinject.txt",
            "id": "PACKETSTORM:137651",
            "last seen": "2016-12-05",
            "published": "2016-06-25",
            "reporter": "rootredrain",
            "source": "https://packetstormsecurity.com/files/137651/Ruby-HTTP-Header-Injection.html",
            "title": "Ruby HTTP Header Injection"
        }
    ],
    "ranking": [
        [
            {
                "circl": 3
            }
        ]
    ],
    "redhat": {
        "advisories": [
            {
                "rhsa": {
                    "id": "RHSA-2016:1626"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2016:1627"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2016:1628"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2016:1629"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2016:1630"
                }
            }
        ],
        "rpms": [
            "python-0:2.7.5-38.el7_2",
            "python-debug-0:2.7.5-38.el7_2",
            "python-devel-0:2.7.5-38.el7_2",
            "python-libs-0:2.7.5-38.el7_2",
            "python-test-0:2.7.5-38.el7_2",
            "python-tools-0:2.7.5-38.el7_2",
            "tkinter-0:2.7.5-38.el7_2",
            "python-0:2.6.6-66.el6_8",
            "python-devel-0:2.6.6-66.el6_8",
            "python-libs-0:2.6.6-66.el6_8",
            "python-test-0:2.6.6-66.el6_8",
            "python-tools-0:2.6.6-66.el6_8",
            "tkinter-0:2.6.6-66.el6_8"
        ]
    },
    "references": [
        "http://blog.blindspotsecurity.com/2016/06/advisory-http-header-injection-in.html",
        "http://rhn.redhat.com/errata/RHSA-2016-1626.html",
        "http://rhn.redhat.com/errata/RHSA-2016-1627.html",
        "http://rhn.redhat.com/errata/RHSA-2016-1628.html",
        "http://rhn.redhat.com/errata/RHSA-2016-1629.html",
        "http://rhn.redhat.com/errata/RHSA-2016-1630.html",
        "http://www.openwall.com/lists/oss-security/2016/06/14/7",
        "http://www.openwall.com/lists/oss-security/2016/06/15/12",
        "http://www.openwall.com/lists/oss-security/2016/06/16/2",
        "http://www.oracle.com/technetwork/topics/security/bulletinjul2016-3090568.html",
        "http://www.securityfocus.com/bid/91226",
        "http://www.splunk.com/view/SP-CAAAPSV",
        "http://www.splunk.com/view/SP-CAAAPUE",
        "https://docs.python.org/3.4/whatsnew/changelog.html#python-3-4-4",
        "https://hg.python.org/cpython/raw-file/v2.7.10/Misc/NEWS",
        "https://hg.python.org/cpython/rev/1c45047c5102",
        "https://hg.python.org/cpython/rev/bf3e1c9b80e9",
        "https://lists.debian.org/debian-lts-announce/2019/02/msg00011.html"
    ],
    "refmap": {
        "bid": [
            "91226"
        ],
        "confirm": [
            "http://www.oracle.com/technetwork/topics/security/bulletinjul2016-3090568.html",
            "http://www.splunk.com/view/SP-CAAAPSV",
            "http://www.splunk.com/view/SP-CAAAPUE",
            "https://docs.python.org/3.4/whatsnew/changelog.html#python-3-4-4",
            "https://hg.python.org/cpython/raw-file/v2.7.10/Misc/NEWS",
            "https://hg.python.org/cpython/rev/1c45047c5102",
            "https://hg.python.org/cpython/rev/bf3e1c9b80e9"
        ],
        "misc": [
            "http://blog.blindspotsecurity.com/2016/06/advisory-http-header-injection-in.html"
        ],
        "mlist": [
            "[debian-lts-announce] 20190207 [SECURITY] [DLA 1663-1] python3.4 security update",
            "[oss-security] 20160614 CVE request: Python HTTP header injection in urrlib2/urllib/httplib/http.client",
            "[oss-security] 20160615 Re: CVE request: Python HTTP header injection in urrlib2/urllib/httplib/http.client",
            "[oss-security] 20160616 Re: CVE request: Python HTTP header injection in urrlib2/urllib/httplib/http.client"
        ]
    },
    "summary": "CRLF injection vulnerability in the HTTPConnection.putheader function in urllib2 and urllib in CPython (aka Python) before 2.7.10 and 3.x before 3.4.4 allows remote attackers to inject arbitrary HTTP headers via CRLF sequences in a URL.",
    "vulnerable_configuration": [
        {
            "id": "cpe:2.3:a:python:python:2.7.9",
            "title": "Python 2.7.9"
        },
        {
            "id": "cpe:2.3:a:python:python:3.0",
            "title": "Python 3.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.0.1",
            "title": "Python 3.0.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.0",
            "title": "Python 3.1.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.1",
            "title": "Python 3.1.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.2",
            "title": "Python 3.1.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.3",
            "title": "Python 3.1.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.4",
            "title": "Python 3.1.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.5",
            "title": "Python 3.1.5"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.0",
            "title": "Python 3.2.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.1",
            "title": "Python 3.2.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.2",
            "title": "Python 3.2.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.3",
            "title": "Python 3.2.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.4",
            "title": "Python 3.2.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.5",
            "title": "Python 3.2.5"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.6",
            "title": "Python 3.2.6"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.0",
            "title": "Python 3.3.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.1",
            "title": "Python 3.3.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.2",
            "title": "Python 3.3.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.3",
            "title": "Python 3.3.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.4",
            "title": "Python 3.3.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.5",
            "title": "Python 3.3.5"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.6",
            "title": "Python 3.3.6"
        },
        {
            "id": "cpe:2.3:a:python:python:3.4.0",
            "title": "Python 3.4.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.4.1",
            "title": "Python 3.4.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.4.2",
            "title": "Python 3.4.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.4.3",
            "title": "Python 3.4.3"
        }
    ],
    "vulnerable_configuration_cpe_2_2": [
        "cpe:/a:python:python:2.7.9",
        "cpe:/a:python:python:3.0",
        "cpe:/a:python:python:3.0.1",
        "cpe:/a:python:python:3.1.0",
        "cpe:/a:python:python:3.1.1",
        "cpe:/a:python:python:3.1.2",
        "cpe:/a:python:python:3.1.3",
        "cpe:/a:python:python:3.1.4",
        "cpe:/a:python:python:3.1.5",
        "cpe:/a:python:python:3.2.0",
        "cpe:/a:python:python:3.2.1",
        "cpe:/a:python:python:3.2.2",
        "cpe:/a:python:python:3.2.3",
        "cpe:/a:python:python:3.2.4",
        "cpe:/a:python:python:3.2.5",
        "cpe:/a:python:python:3.2.6",
        "cpe:/a:python:python:3.3.0",
        "cpe:/a:python:python:3.3.1",
        "cpe:/a:python:python:3.3.2",
        "cpe:/a:python:python:3.3.3",
        "cpe:/a:python:python:3.3.4",
        "cpe:/a:python:python:3.3.5",
        "cpe:/a:python:python:3.3.6",
        "cpe:/a:python:python:3.4.0",
        "cpe:/a:python:python:3.4.1",
        "cpe:/a:python:python:3.4.2",
        "cpe:/a:python:python:3.4.3"
    ]
}