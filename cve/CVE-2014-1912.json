{
    "Modified": "2016-11-28T14:10:55.193000",
    "Published": "2014-02-28T19:55:05.093000",
    "access": {
        "authentication": "NONE",
        "complexity": "LOW",
        "vector": "NETWORK"
    },
    "capec": [
        {
            "id": "10",
            "name": "Buffer Overflow via Environment Variables",
            "prerequisites": "The application uses environment variables.\nAn environment variable exposed to the user is vulnerable to a buffer overflow.\nThe vulnerable environment variable uses untrusted data.\nTainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer.",
            "related_weakness": [
                "120",
                "302",
                "118",
                "119",
                "74",
                "99",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Do not expose environment variable to the user.\nDo not use untrusted data in your environment variables.\nUse a language or compiler that performs automatic bounds checking\nThere are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow.",
            "summary": "This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables."
        },
        {
            "id": "100",
            "name": "Overflow Buffers",
            "prerequisites": "Targeted software performs buffer operations.\nTargeted software inadequately performs bounds-checking on buffer operations.\nAttacker has the capability to influence the input to buffer operations.",
            "related_weakness": [
                "120",
                "119",
                "131",
                "129",
                "805",
                "19",
                "680"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse secure functions not vulnerable to buffer overflow.\nIf you have to use dangerous functions, make sure that you do boundary checking.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.\nUtilize static source code analysis tools to identify potential buffer overflow weaknesses in the software.",
            "summary": "Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an attacker. As a consequence, an attacker is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the attackers' choice."
        },
        {
            "id": "14",
            "name": "Client-side Injection-induced Buffer Overflow",
            "prerequisites": "The targeted client software communicates with an external server.\nThe targeted client software has a buffer overflow vulnerability.",
            "related_weakness": [
                "120",
                "353",
                "118",
                "119",
                "74",
                "20",
                "680",
                "697",
                "713"
            ],
            "solutions": "The client software should not install untrusted code from a non-authenticated server.\nThe client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.\nPerform input validation for length of buffer inputs.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nEnsure all buffer uses are consistently bounds-checked.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service."
        },
        {
            "id": "24",
            "name": "Filter Failure through Buffer Overflow",
            "prerequisites": "Ability to control the length of data passed to an active filter.",
            "related_weakness": [
                "120",
                "119",
                "118",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.\nPre-design: Use a language or compiler that performs automatic bounds checking.\nPre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nOperational: Use OS-level preventative functionality. Not a complete solution.\nDesign: Use an abstraction library to abstract away risky APIs. Not a complete solution.",
            "summary": "In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered)."
        },
        {
            "id": "42",
            "name": "MIME Conversion",
            "prerequisites": "The target system uses a mail server.\nMail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system.",
            "related_weakness": [
                "120",
                "119",
                "74",
                "20"
            ],
            "solutions": "Stay up to date with third party vendor patches\nFrom \"Exploiting Software\", please see reference below.\nUse the sendmail restricted shell program (smrsh)\nUse mail.local",
            "summary": "An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back."
        },
        {
            "id": "44",
            "name": "Overflow Binary Resource File",
            "prerequisites": "Target software processes binary resource files.\nTarget software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file.",
            "related_weakness": [
                "120",
                "119",
                "697",
                "713"
            ],
            "solutions": "Perform appropriate bounds checking on all buffers.\nDesign: Enforce principle of least privilege\nDesign: Static code analysis\nImplementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes\nImplementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host.",
            "summary": "An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow."
        },
        {
            "id": "45",
            "name": "Buffer Overflow via Symbolic Links",
            "prerequisites": "The attacker can create symbolic link on the target host.\nThe target host does not perform correct boundary checking while consuming data from a resources.",
            "related_weakness": [
                "120",
                "285",
                "302",
                "118",
                "119",
                "74",
                "20",
                "680",
                "697"
            ],
            "solutions": "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.\nBecause Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.\nPay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.\nAlways check the size of the input data before copying to a buffer.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."
        },
        {
            "id": "46",
            "name": "Overflow Variables and Tags",
            "prerequisites": "The target program consumes user-controllable data in the form of tags or variables.\nThe target program does not perform sufficient boundary checking.",
            "related_weakness": [
                "120",
                "118",
                "119",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.\nDo not trust input data from user. Validate all user input.",
            "summary": "This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow."
        },
        {
            "id": "47",
            "name": "Buffer Overflow via Parameter Expansion",
            "prerequisites": "The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.\nThe expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is).",
            "related_weakness": [
                "120",
                "119",
                "118",
                "130",
                "131",
                "74",
                "20",
                "680",
                "697"
            ],
            "solutions": "Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system",
            "summary": "In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow."
        },
        {
            "id": "8",
            "name": "Buffer Overflow in an API Call",
            "prerequisites": "The target host exposes an API to the user.\nOne or more API functions exposed by the target host has a buffer overflow vulnerability.",
            "related_weakness": [
                "120",
                "119",
                "118",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Use a language or compiler that performs automatic bounds checking.\nUse secure functions not vulnerable to buffer overflow.\nIf you have to use dangerous functions, make sure that you do boundary checking.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nUse OS-level preventative functionality. Not a complete solution.",
            "summary": "This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process."
        },
        {
            "id": "9",
            "name": "Buffer Overflow in Local Command-Line Utilities",
            "prerequisites": "The target host exposes a command-line utility to the user.\nThe command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited.",
            "related_weakness": [
                "120",
                "118",
                "119",
                "74",
                "20",
                "680",
                "733",
                "697"
            ],
            "solutions": "Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.\nUse a language or compiler that performs automatic bounds checking.\nUse an abstraction library to abstract away risky APIs. Not a complete solution.\nCompiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.\nOperational: Use OS-level preventative functionality. Not a complete solution.\nApply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.\nDo not unnecessarily expose services.",
            "summary": "This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root."
        }
    ],
    "cvss": "7.5",
    "cvss-time": "2016-03-30T14:44:45.023000",
    "cwe": "CWE-119",
    "exploit-db": [
        {
            "description": "Python socket.recvfrom_into() - Remote Buffer Overflow. CVE-2014-1912. Remote exploit for linux platform",
            "file": "exploits/linux/remote/31875.py",
            "id": "EDB-ID:31875",
            "last seen": "2016-02-03",
            "modified": "2014-02-24",
            "platform": "linux",
            "port": "",
            "published": "2014-02-24",
            "reporter": "Sha0",
            "source": "https://www.exploit-db.com/download/31875/",
            "title": "Python socket.recvfrom_into - Remote Buffer Overflow",
            "type": "remote"
        }
    ],
    "id": "CVE-2014-1912",
    "impact": {
        "availability": "PARTIAL",
        "confidentiality": "PARTIAL",
        "integrity": "PARTIAL"
    },
    "last-modified": "2018-01-04T21:29:49.023000",
    "nessus": [
        {
            "NASL family": "Amazon Linux Local Security Checks",
            "NASL id": "ALA_ALAS-2014-293.NASL",
            "description": "Buffer overflow in the socket.recvfrom_into function in Modules/socketmodule.c in Python 2.5 before 2.7.7, 3.x before 3.3.4, and 3.4.x before 3.4rc1 allows remote attackers to execute arbitrary code via a crafted string.",
            "last seen": "2019-02-21",
            "modified": "2018-08-02",
            "plugin id": "72749",
            "published": "2014-03-02",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72749",
            "title": "Amazon Linux AMI : python27 (ALAS-2014-293)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "SUSE_11_PYTHON-201403-140331.NASL",
            "description": "Python was updated to fix a security issue in the socket.recvfrom_into function, where data could be written over the end of the buffer.\n(CVE-2014-1912)",
            "last seen": "2019-02-21",
            "modified": "2018-08-03",
            "plugin id": "73751",
            "published": "2014-04-29",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=73751",
            "title": "SuSE 11.3 Security Update : Python (SAT Patch Number 9075)"
        },
        {
            "NASL family": "Amazon Linux Local Security Checks",
            "NASL id": "ALA_ALAS-2014-292.NASL",
            "description": "Buffer overflow in the socket.recvfrom_into function in Modules/socketmodule.c in Python 2.5 before 2.7.7, 3.x before 3.3.4, and 3.4.x before 3.4rc1 allows remote attackers to execute arbitrary code via a crafted string.",
            "last seen": "2019-02-21",
            "modified": "2018-08-02",
            "plugin id": "72748",
            "published": "2014-03-02",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72748",
            "title": "Amazon Linux AMI : python26 (ALAS-2014-292)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2014-333.NASL",
            "description": "This python update fixes the following security and non-security issues :\n\n  - bnc#869222: Fixed DoS when opening malicious archives     (CVE-2013-7338).\n\n  - bnc#863741: Fixed buffer overflow in     socket.recvfrom_into (CVE-2014-1912).\n\n  - bnc#871152: Fixed race condition with umask when     creating directories with os.mkdirs (CVE-2014-2667).\n\n  - bnc#637176: Fixed update multilib patch to handle home     install scheme.",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "75343",
            "published": "2014-06-13",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=75343",
            "title": "openSUSE Security Update : python3 (openSUSE-SU-2014:0597-1)"
        },
        {
            "NASL family": "Ubuntu Local Security Checks",
            "NASL id": "UBUNTU_USN-2125-1.NASL",
            "description": "Ryan Smith-Roberts discovered that Python incorrectly handled buffer sizes when using the socket.recvfrom_into() function. An attacker could possibly use this issue to cause Python to crash, resulting in denial of service, or possibly execute arbitrary code.\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-12-01",
            "plugin id": "72798",
            "published": "2014-03-04",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72798",
            "title": "Ubuntu 10.04 LTS / 12.04 LTS / 12.10 / 13.10 : python2.6, python2.7, python3.2, python3.3 vulnerability (USN-2125-1)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2014-289.NASL",
            "description": "This python updated fixes the following security issue :\n\n  - bnc#863741: Fixed potential buffer overflow in     socket.recvfrom_into (CVE-2014-1912).",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "75320",
            "published": "2014-06-13",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=75320",
            "title": "openSUSE Security Update : python (openSUSE-SU-2014:0518-1)"
        },
        {
            "NASL family": "MacOS X Local Security Checks",
            "NASL id": "MACOSX_10_10_5.NASL",
            "description": "The remote host is running a version of Mac OS X 10.10.x that is prior to 10.10.5. It is, therefore, affected by multiple vulnerabilities in the following components :\n\n  - apache\n  - apache_mod_php\n  - Apple ID OD Plug-in\n  - AppleGraphicsControl\n  - Bluetooth\n  - bootp\n  - CloudKit\n  - CoreMedia Playback\n  - CoreText\n  - curl\n  - Data Detectors Engine\n  - Date & Time pref pane\n  - Dictionary Application\n  - DiskImages\n  - dyld\n  - FontParser\n  - groff\n  - ImageIO\n  - Install Framework Legacy\n  - IOFireWireFamily\n  - IOGraphics\n  - IOHIDFamily\n  - Kernel\n  - Libc\n  - Libinfo\n  - libpthread\n  - libxml2\n  - libxpc\n  - mail_cmds\n  - Notification Center OSX\n  - ntfs\n  - OpenSSH\n  - OpenSSL\n  - perl\n  - PostgreSQL\n  - python\n  - QL Office\n  - Quartz Composer Framework\n  - Quick Look\n  - QuickTime 7\n  - SceneKit\n  - Security\n  - SMBClient\n  - Speech UI\n  - sudo\n  - tcpdump\n  - Text Formats\n  - udf \n\nNote that successful exploitation of the most serious issues can result in arbitrary code execution.",
            "last seen": "2019-02-21",
            "modified": "2018-07-16",
            "plugin id": "85408",
            "published": "2015-08-17",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=85408",
            "title": "Mac OS X 10.10.x < 10.10.5 Multiple Vulnerabilities"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2014-2418.NASL",
            "description": "Buffer overflow fix.\n\nSee upstream issue: http://bugs.python.org/issue20246\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-20",
            "plugin id": "72524",
            "published": "2014-02-17",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72524",
            "title": "Fedora 20 : python3-3.3.2-9.fc20 (2014-2418)"
        },
        {
            "NASL family": "Fedora Local Security Checks",
            "NASL id": "FEDORA_2014-2394.NASL",
            "description": "Buffer overflow fix.\n\nSee upstream issue: http://bugs.python.org/issue20246\n\nNote that Tenable Network Security has extracted the preceding description block directly from the Fedora security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues.",
            "last seen": "2019-02-21",
            "modified": "2018-11-20",
            "plugin id": "72523",
            "published": "2014-02-17",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72523",
            "title": "Fedora 20 : python-2.7.5-10.fc20 (2014-2394)"
        },
        {
            "NASL family": "Mandriva Local Security Checks",
            "NASL id": "MANDRIVA_MDVSA-2014-041.NASL",
            "description": "A vulnerability was reported in Python's socket module, due to a boundary error within the sock_recvfrom_into() function, which could be exploited to cause a buffer overflow. This could be used to crash a Python application that uses the socket.recvfrom_info() function or, possibly, execute arbitrary code with the permissions of the user running vulnerable Python code (CVE-2014-1912).\n\nThe updated packages have been patched to correct this issue.",
            "last seen": "2019-02-21",
            "modified": "2018-08-03",
            "plugin id": "72594",
            "published": "2014-02-20",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72594",
            "title": "Mandriva Linux Security Advisory : python (MDVSA-2014:041)"
        },
        {
            "NASL family": "Debian Local Security Checks",
            "NASL id": "DEBIAN_DSA-2880.NASL",
            "description": "Multiple security issues were discovered in Python :\n\n  - CVE-2013-4238     Ryan Sleevi discovered that NULL characters in the     subject alternate names of SSL cerficates were parsed     incorrectly.\n\n  - CVE-2014-1912     Ryan Smith-Roberts discovered a buffer overflow in the     socket.recvfrom_into() function.",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "73065",
            "published": "2014-03-18",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=73065",
            "title": "Debian DSA-2880-1 : python2.7 - security update"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2014-278.NASL",
            "description": "Python was updated to 3.3.5 fixing bugs and security issues :\n\n  - bugfix-only release, closes several security bugs\n\n  - CVE-2013-1752 (bnc#856836) - DoS flaws with unbounded     reads from network\n\n  - disable SSLv2 by default\n\n  - DoS on maliciously crafted zip files (CVE-2013-7338,     bnc#869222)\n\n  - CGIHttpRequestHandler directory traversal\n\n  - gzip decompression bomb in xmlrpc client (CVE-2013-1753,     bnc#856835) xmlrpc_gzip_33.patch\n\n  - potential buffer overflow in recvfrom_into     (CVE-2014-1912, bnc#863741)\n\n  - hundreds of non-security-related bugfixes",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "75315",
            "published": "2014-06-13",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=75315",
            "title": "openSUSE Security Update : python3 (openSUSE-SU-2014:0498-1)"
        },
        {
            "NASL family": "Mandriva Local Security Checks",
            "NASL id": "MANDRIVA_MDVSA-2015-076.NASL",
            "description": "Updated python3 packages fix security vulnerabilities :\n\nZipExtFile.read goes into 100% CPU infinite loop on maliciously binary edited zips (CVE-2013-7338).\n\nA vulnerability was reported in Python's socket module, due to a boundary error within the sock_recvfrom_into() function, which could be exploited to cause a buffer overflow. This could be used to crash a Python application that uses the socket.recvfrom_info() function or, possibly, execute arbitrary code with the permissions of the user running vulnerable Python code (CVE-2014-1912).\n\nIt was reported that a patch added to Python 3.2 caused a race condition where a file created could be created with world read/write permissions instead of the permissions dictated by the original umask of the process. This could allow a local attacker that could win the race to view and edit files created by a program using this call. Note that prior versions of Python, including 2.x, do not include the vulnerable _get_masked_mode() function that is used by os.makedirs() when exist_ok is set to True (CVE-2014-2667).\n\nPython are susceptible to arbitrary process memory reading by a user or adversary due to a bug in the _json module caused by insufficient bounds checking. The bug is caused by allowing the user to supply a negative value that is used an an array index, causing the scanstring function to access process memory outside of the string it is intended to access (CVE-2014-4616).\n\nThe CGIHTTPServer Python module does not properly handle URL-encoded path separators in URLs. This may enable attackers to disclose a CGI script's source code or execute arbitrary scripts in the server's document root (CVE-2014-4650).",
            "last seen": "2019-02-21",
            "modified": "2018-08-03",
            "plugin id": "82329",
            "published": "2015-03-30",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=82329",
            "title": "Mandriva Linux Security Advisory : python3 (MDVSA-2015:076)"
        },
        {
            "NASL family": "CentOS Local Security Checks",
            "NASL id": "CENTOS_RHSA-2015-1330.NASL",
            "description": "Updated python packages that fix multiple security issues, several bugs and add one enhancement are now available for Red Hat Enterprise Linux 6.\n\nRed Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language often compared to Tcl, Perl, Scheme, or Java. Python includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems (X11, Motif, Tk, Mac and MFC).\n\nIt was discovered that the socket.recvfrom_into() function failed to check the size of the supplied buffer. This could lead to a buffer overflow when the function was called with an insufficiently sized buffer. (CVE-2014-1912)\n\nIt was discovered that multiple Python standard library modules implementing network protocols (such as httplib or smtplib) failed to restrict the sizes of server responses. A malicious server could cause a client using one of the affected modules to consume an excessive amount of memory. (CVE-2013-1752)\n\nIt was discovered that the CGIHTTPServer module incorrectly handled URL encoded paths. A remote attacker could use this flaw to execute scripts outside of the cgi-bin directory, or disclose the source code of the scripts in the cgi-bin directory. (CVE-2014-4650)\n\nAn integer overflow flaw was found in the way the buffer() function handled its offset and size arguments. An attacker able to control these arguments could use this flaw to disclose portions of the application memory or cause it to crash. (CVE-2014-7185)\n\nThese updated python packages also include numerous bug fixes and enhancements. Space precludes documenting all of these changes in this advisory. For information on the most significant of these changes, users are directed to the following article on the Red Hat Customer Portal :\n\nhttps://access.redhat.com/articles/1495363\n\nAll python users are advised to upgrade to these updated packages, which contain backported patches to correct these issues and add this enhancement.",
            "last seen": "2019-02-21",
            "modified": "2018-07-02",
            "plugin id": "85012",
            "published": "2015-07-28",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=85012",
            "title": "CentOS 6 : python (CESA-2015:1330)"
        },
        {
            "NASL family": "Oracle Linux Local Security Checks",
            "NASL id": "ORACLELINUX_ELSA-2015-1330.NASL",
            "description": "From Red Hat Security Advisory 2015:1330 :\n\nUpdated python packages that fix multiple security issues, several bugs and add one enhancement are now available for Red Hat Enterprise Linux 6.\n\nRed Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language often compared to Tcl, Perl, Scheme, or Java. Python includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems (X11, Motif, Tk, Mac and MFC).\n\nIt was discovered that the socket.recvfrom_into() function failed to check the size of the supplied buffer. This could lead to a buffer overflow when the function was called with an insufficiently sized buffer. (CVE-2014-1912)\n\nIt was discovered that multiple Python standard library modules implementing network protocols (such as httplib or smtplib) failed to restrict the sizes of server responses. A malicious server could cause a client using one of the affected modules to consume an excessive amount of memory. (CVE-2013-1752)\n\nIt was discovered that the CGIHTTPServer module incorrectly handled URL encoded paths. A remote attacker could use this flaw to execute scripts outside of the cgi-bin directory, or disclose the source code of the scripts in the cgi-bin directory. (CVE-2014-4650)\n\nAn integer overflow flaw was found in the way the buffer() function handled its offset and size arguments. An attacker able to control these arguments could use this flaw to disclose portions of the application memory or cause it to crash. (CVE-2014-7185)\n\nThese updated python packages also include numerous bug fixes and enhancements. Space precludes documenting all of these changes in this advisory. For information on the most significant of these changes, users are directed to the following article on the Red Hat Customer Portal :\n\nhttps://access.redhat.com/articles/1495363\n\nAll python users are advised to upgrade to these updated packages, which contain backported patches to correct these issues and add this enhancement.",
            "last seen": "2019-02-21",
            "modified": "2018-07-26",
            "plugin id": "85099",
            "published": "2015-07-30",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=85099",
            "title": "Oracle Linux 6 : python (ELSA-2015-1330)"
        },
        {
            "NASL family": "FreeBSD Local Security Checks",
            "NASL id": "FREEBSD_PKG_8E5E6D42A0FA11E3B09A080027F2D077.NASL",
            "description": "Vincent Danen via Red Hat Issue Tracker reports :\n\nA vulnerability was reported in Python's socket module, due to a boundary error within the sock_recvfrom_into() function, which could be exploited to cause a buffer overflow. This could be used to crash a Python application that uses the socket.recvfrom_info() function or, possibly, execute arbitrary code with the permissions of the user running vulnerable Python code.\n\nThis vulnerable function, socket.recvfrom_into(), was introduced in Python 2.5. Earlier versions are not affected by this flaw.",
            "last seen": "2019-02-21",
            "modified": "2018-11-21",
            "plugin id": "72768",
            "published": "2014-03-03",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=72768",
            "title": "FreeBSD : Python -- buffer overflow in socket.recvfrom_into() (8e5e6d42-a0fa-11e3-b09a-080027f2d077)"
        },
        {
            "NASL family": "Databases",
            "NASL id": "MYSQL_CLUSTER_7_3_6.NASL",
            "description": "The version of MySQL Cluster running on the remote host is 7.3.x prior to 7.3.6. It is, therefore, affected by an overflow condition in the CLSTCONF component, specifically in the Python sock_recvfrom_into() function within file Modules/socketmodule.c, due to improper validation of user-supplied input when checking boundaries. An unauthenticated, remote attacker can exploit this, via a specially crafted string, to cause a denial of service condition or the execution of arbitrary code.",
            "last seen": "2019-02-21",
            "modified": "2018-07-17",
            "plugin id": "101811",
            "published": "2017-07-19",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=101811",
            "title": "MySQL Cluster 7.3.x < 7.3.6 CLSTCONF RCE (July 2017 CPU)"
        },
        {
            "NASL family": "SuSE Local Security Checks",
            "NASL id": "OPENSUSE-2014-213.NASL",
            "description": "Python was updated to 2.7.6 to fix bugs and security issues :\n\n  - bugfix-only release\n\n  - SSL-related fixes\n\n  - upstream fix for CVE-2013-4238\n\n  - upstream fixes for CVE-2013-1752\n\n  - added patches for CVE-2013-1752 (bnc#856836) issues that     are missing in 2.7.6: python-2.7.6-imaplib.patch     python-2.7.6-poplib.patch smtplib_maxline-2.7.patch\n\n  - CVE-2013-1753 (bnc#856835) gzip decompression bomb in     xmlrpc client: xmlrpc_gzip_27.patch\n\n  - python-2.7.6-bdist-rpm.patch: fix broken 'setup.py     bdist_rpm' command (bnc#857470, issue18045)\n\n  - multilib patch: add '~/.local/lib64' paths to search     path (bnc#637176)\n\n  - CVE-2014-1912-recvfrom_into.patch: fix potential buffer     overflow in socket.recvfrom_into (CVE-2014-1912,     bnc#863741)\n\n  - Add Obsoletes/Provides for python-ctypes.\n\n  - reintroduce audioop.so as the problems with it seem to     be fixed (bnc#831442)",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "75294",
            "published": "2014-06-13",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=75294",
            "title": "openSUSE Security Update : python (openSUSE-SU-2014:0380-1)"
        },
        {
            "NASL family": "Gentoo Local Security Checks",
            "NASL id": "GENTOO_GLSA-201503-10.NASL",
            "description": "The remote host is affected by the vulnerability described in GLSA-201503-10 (Python: Multiple vulnerabilities)\n\n    Multiple vulnerabilities have been discovered in Python. Please review       the CVE identifiers referenced below for details.\n  Impact :\n\n    A context-dependent attacker may be able to execute arbitrary code or       cause a Denial of Service condition.\n  Workaround :\n\n    There is no known workaround at this time.",
            "last seen": "2019-02-21",
            "modified": "2018-08-02",
            "plugin id": "82009",
            "published": "2015-03-24",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=82009",
            "title": "GLSA-201503-10 : Python: Multiple vulnerabilities"
        },
        {
            "NASL family": "Scientific Linux Local Security Checks",
            "NASL id": "SL_20150722_PYTHON_ON_SL6_X.NASL",
            "description": "It was discovered that the socket.recvfrom_into() function failed to check the size of the supplied buffer. This could lead to a buffer overflow when the function was called with an insufficiently sized buffer. (CVE-2014-1912)\n\nIt was discovered that multiple Python standard library modules implementing network protocols (such as httplib or smtplib) failed to restrict the sizes of server responses. A malicious server could cause a client using one of the affected modules to consume an excessive amount of memory. (CVE-2013-1752)\n\nIt was discovered that the CGIHTTPServer module incorrectly handled URL encoded paths. A remote attacker could use this flaw to execute scripts outside of the cgi-bin directory, or disclose the source code of the scripts in the cgi-bin directory. (CVE-2014-4650)\n\nAn integer overflow flaw was found in the way the buffer() function handled its offset and size arguments. An attacker able to control these arguments could use this flaw to disclose portions of the application memory or cause it to crash. (CVE-2014-7185)",
            "last seen": "2019-02-21",
            "modified": "2018-12-28",
            "plugin id": "85206",
            "published": "2015-08-04",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=85206",
            "title": "Scientific Linux Security Update : python on SL6.x i386/x86_64"
        },
        {
            "NASL family": "Red Hat Local Security Checks",
            "NASL id": "REDHAT-RHSA-2015-1330.NASL",
            "description": "Updated python packages that fix multiple security issues, several bugs and add one enhancement are now available for Red Hat Enterprise Linux 6.\n\nRed Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.\n\nPython is an interpreted, interactive, object-oriented programming language often compared to Tcl, Perl, Scheme, or Java. Python includes modules, classes, exceptions, very high level dynamic data types and dynamic typing. Python supports interfaces to many system calls and libraries, as well as to various windowing systems (X11, Motif, Tk, Mac and MFC).\n\nIt was discovered that the socket.recvfrom_into() function failed to check the size of the supplied buffer. This could lead to a buffer overflow when the function was called with an insufficiently sized buffer. (CVE-2014-1912)\n\nIt was discovered that multiple Python standard library modules implementing network protocols (such as httplib or smtplib) failed to restrict the sizes of server responses. A malicious server could cause a client using one of the affected modules to consume an excessive amount of memory. (CVE-2013-1752)\n\nIt was discovered that the CGIHTTPServer module incorrectly handled URL encoded paths. A remote attacker could use this flaw to execute scripts outside of the cgi-bin directory, or disclose the source code of the scripts in the cgi-bin directory. (CVE-2014-4650)\n\nAn integer overflow flaw was found in the way the buffer() function handled its offset and size arguments. An attacker able to control these arguments could use this flaw to disclose portions of the application memory or cause it to crash. (CVE-2014-7185)\n\nThese updated python packages also include numerous bug fixes and enhancements. Space precludes documenting all of these changes in this advisory. For information on the most significant of these changes, users are directed to the following article on the Red Hat Customer Portal :\n\nhttps://access.redhat.com/articles/1495363\n\nAll python users are advised to upgrade to these updated packages, which contain backported patches to correct these issues and add this enhancement.",
            "last seen": "2019-02-21",
            "modified": "2018-11-10",
            "plugin id": "84938",
            "published": "2015-07-23",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=84938",
            "title": "RHEL 6 : python (RHSA-2015:1330)"
        },
        {
            "NASL family": "Mandriva Local Security Checks",
            "NASL id": "MANDRIVA_MDVSA-2015-075.NASL",
            "description": "Updated python packages fix security vulnerabilities :\n\nA vulnerability was reported in Python's socket module, due to a boundary error within the sock_recvfrom_into() function, which could be exploited to cause a buffer overflow. This could be used to crash a Python application that uses the socket.recvfrom_info() function or, possibly, execute arbitrary code with the permissions of the user running vulnerable Python code (CVE-2014-1912).\n\nThis updates the python package to version 2.7.6, which fixes several other bugs, including denial of service flaws due to unbound readline() calls in the ftplib and nntplib modules (CVE-2013-1752).\n\nDenial of service flaws due to unbound readline() calls in the imaplib, poplib, and smtplib modules (CVE-2013-1752).\n\nA gzip bomb and unbound read denial of service flaw in python XMLRPC library (CVE-2013-1753).\n\nPython are susceptible to arbitrary process memory reading by a user or adversary due to a bug in the _json module caused by insufficient bounds checking. The bug is caused by allowing the user to supply a negative value that is used an an array index, causing the scanstring function to access process memory outside of the string it is intended to access (CVE-2014-4616).\n\nThe CGIHTTPServer Python module does not properly handle URL-encoded path separators in URLs. This may enable attackers to disclose a CGI script's source code or execute arbitrary scripts in the server's document root (CVE-2014-4650).\n\nPython before 2.7.8 is vulnerable to an integer overflow in the buffer type (CVE-2014-7185).\n\nWhen Python's standard library HTTP clients (httplib, urllib, urllib2, xmlrpclib) are used to access resources with HTTPS, by default the certificate is not checked against any trust store, nor is the hostname in the certificate checked against the requested host. It was possible to configure a trust root to be checked against, however there were no faculties for hostname checking (CVE-2014-9365).\n\nThe python-pip and tix packages was added due to missing build dependencies.",
            "last seen": "2019-02-21",
            "modified": "2018-08-03",
            "plugin id": "82328",
            "published": "2015-03-30",
            "reporter": "Tenable",
            "source": "https://www.tenable.com/plugins/index.php?view=single&id=82328",
            "title": "Mandriva Linux Security Advisory : python (MDVSA-2015:075)"
        }
    ],
    "ranking": [
        [
            {
                "circl": 3
            }
        ]
    ],
    "redhat": {
        "advisories": [
            {
                "rhsa": {
                    "id": "RHSA-2015:1064"
                }
            },
            {
                "rhsa": {
                    "id": "RHSA-2015:1330"
                }
            }
        ],
        "rpms": [
            "python-0:2.6.6-64.el6",
            "python-devel-0:2.6.6-64.el6",
            "python-libs-0:2.6.6-64.el6",
            "python-test-0:2.6.6-64.el6",
            "python-tools-0:2.6.6-64.el6",
            "tkinter-0:2.6.6-64.el6"
        ]
    },
    "references": [
        "http://bugs.python.org/issue20246",
        "http://hg.python.org/cpython/rev/87673659d8f7",
        "http://lists.apple.com/archives/security-announce/2015/Aug/msg00001.html",
        "http://lists.opensuse.org/opensuse-updates/2014-04/msg00035.html",
        "http://lists.opensuse.org/opensuse-updates/2014-05/msg00008.html",
        "http://pastebin.com/raw.php?i=GHXSmNEg",
        "http://rhn.redhat.com/errata/RHSA-2015-1064.html",
        "http://rhn.redhat.com/errata/RHSA-2015-1330.html",
        "http://www.debian.org/security/2014/dsa-2880",
        "http://www.exploit-db.com/exploits/31875",
        "http://www.openwall.com/lists/oss-security/2014/02/12/16",
        "http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html",
        "http://www.oracle.com/technetwork/topics/security/linuxbulletinjan2016-2867209.html",
        "http://www.securityfocus.com/bid/65379",
        "http://www.securitytracker.com/id/1029831",
        "http://www.ubuntu.com/usn/USN-2125-1",
        "https://security.gentoo.org/glsa/201503-10",
        "https://support.apple.com/kb/HT205031",
        "https://www.trustedsec.com/february-2014/python-remote-code-execution-socket-recvfrom_into/"
    ],
    "refmap": {
        "apple": [
            "APPLE-SA-2015-08-13-2"
        ],
        "bid": [
            "65379"
        ],
        "confirm": [
            "http://bugs.python.org/issue20246",
            "http://hg.python.org/cpython/rev/87673659d8f7",
            "http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html",
            "http://www.oracle.com/technetwork/topics/security/linuxbulletinjan2016-2867209.html",
            "https://support.apple.com/kb/HT205031"
        ],
        "debian": [
            "DSA-2880"
        ],
        "exploit-db": [
            "31875"
        ],
        "gentoo": [
            "GLSA-201503-10"
        ],
        "misc": [
            "http://pastebin.com/raw.php?i=GHXSmNEg",
            "https://www.trustedsec.com/february-2014/python-remote-code-execution-socket-recvfrom_into/"
        ],
        "mlist": [
            "[oss-security] 20140212 Re: CVE request? buffer overflow in socket.recvfrom_into"
        ],
        "sectrack": [
            "1029831"
        ],
        "suse": [
            "openSUSE-SU-2014:0518",
            "openSUSE-SU-2014:0597"
        ],
        "ubuntu": [
            "USN-2125-1"
        ]
    },
    "summary": "Buffer overflow in the socket.recvfrom_into function in Modules/socketmodule.c in Python 2.5 before 2.7.7, 3.x before 3.3.4, and 3.4.x before 3.4rc1 allows remote attackers to execute arbitrary code via a crafted string.",
    "vulnerable_configuration": [
        {
            "id": "cpe:2.3:a:python:python:2.5",
            "title": "Python 2.5"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.1",
            "title": "Python 2.5.1"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.2",
            "title": "Python 2.5.2"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.3",
            "title": "Python 2.5.3"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.4",
            "title": "Python 2.5.4"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.6",
            "title": "Python 2.5.6"
        },
        {
            "id": "cpe:2.3:a:python:python:2.5.150",
            "title": "Python 2.5.150"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6",
            "title": "Python 2.6"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.1",
            "title": "Python 2.6.1"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.2",
            "title": "Python 2.6.2"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.3",
            "title": "Python 2.6.3"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.4",
            "title": "Python 2.6.4"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.5",
            "title": "Python 2.6.5"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.6",
            "title": "Python 2.6.6"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.7",
            "title": "Python 2.6.7"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.8",
            "title": "Python 2.6.8"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.2150",
            "title": "Python 2.6.2150"
        },
        {
            "id": "cpe:2.3:a:python:python:2.6.6150",
            "title": "Python 2.6.6150"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7",
            "title": "Python 2.7"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.1",
            "title": "Python 2.7.1"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.1:rc1",
            "title": "Python 2.7.1 Release Candiate 1"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.2:rc1",
            "title": "Python 2.7.2 Release Candidate 1"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.3",
            "title": "Python 2.7.3"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.4",
            "title": "Python 2.7.4"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.5",
            "title": "Python 2.7.5"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.6",
            "title": "Python 2.7.6"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.1150",
            "title": "Python 2.7.1150"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.1150:-:-:-:-:-:x64",
            "title": "Python 2.7.1150 (x64) 64-bit"
        },
        {
            "id": "cpe:2.3:a:python:python:2.7.2150",
            "title": "Python 2.7.2150"
        },
        {
            "id": "cpe:2.3:o:apple:mac_os_x:10.10.4",
            "title": "Apple Mac OS X 10.10.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.0",
            "title": "Python 3.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.0.1",
            "title": "Python 3.0.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1",
            "title": "Python 3.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.1",
            "title": "Python 3.1.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.2",
            "title": "Python 3.1.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.3",
            "title": "Python 3.1.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.4",
            "title": "Python 3.1.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.5",
            "title": "Python 3.1.5"
        },
        {
            "id": "cpe:2.3:a:python:python:3.1.2150:-:-:-:-:-:x64",
            "title": "Python 3.1.2150 (x64) 64-bit"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2",
            "title": "Python 3.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2:alpha",
            "title": "Python 3.2-alpha"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.0",
            "title": "Python 3.2.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.1",
            "title": "Python 3.2.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.2",
            "title": "Python 3.2.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.3",
            "title": "Python 3.2.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.4",
            "title": "Python 3.2.4"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.5",
            "title": "Python 3.2.5"
        },
        {
            "id": "cpe:2.3:a:python:python:3.2.2150",
            "title": "Python 3.2.2150"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3",
            "title": "Python 3.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3:beta2",
            "title": "Python 3.3 beta 2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.0",
            "title": "Python 3.3.0"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.1",
            "title": "Python 3.3.1"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.2",
            "title": "Python 3.3.2"
        },
        {
            "id": "cpe:2.3:a:python:python:3.3.3",
            "title": "Python 3.3.3"
        },
        {
            "id": "cpe:2.3:a:python:python:3.4:alpha1",
            "title": "Python 3.4 alpha 1"
        }
    ],
    "vulnerable_configuration_cpe_2_2": [
        "cpe:/a:python:python:2.5",
        "cpe:/a:python:python:2.5.1",
        "cpe:/a:python:python:2.5.2",
        "cpe:/a:python:python:2.5.3",
        "cpe:/a:python:python:2.5.4",
        "cpe:/a:python:python:2.5.6",
        "cpe:/a:python:python:2.5.150",
        "cpe:/a:python:python:2.6",
        "cpe:/a:python:python:2.6.1",
        "cpe:/a:python:python:2.6.2",
        "cpe:/a:python:python:2.6.3",
        "cpe:/a:python:python:2.6.4",
        "cpe:/a:python:python:2.6.5",
        "cpe:/a:python:python:2.6.6",
        "cpe:/a:python:python:2.6.7",
        "cpe:/a:python:python:2.6.8",
        "cpe:/a:python:python:2.6.2150",
        "cpe:/a:python:python:2.6.6150",
        "cpe:/a:python:python:2.7",
        "cpe:/a:python:python:2.7.1",
        "cpe:/a:python:python:2.7.1:rc1",
        "cpe:/a:python:python:2.7.2:rc1",
        "cpe:/a:python:python:2.7.3",
        "cpe:/a:python:python:2.7.4",
        "cpe:/a:python:python:2.7.5",
        "cpe:/a:python:python:2.7.6",
        "cpe:/a:python:python:2.7.1150",
        "cpe:/a:python:python:2.7.1150::~~~~x64~",
        "cpe:/a:python:python:2.7.2150",
        "cpe:/o:apple:mac_os_x:10.10.4",
        "cpe:/a:python:python:3.0",
        "cpe:/a:python:python:3.0.1",
        "cpe:/a:python:python:3.1",
        "cpe:/a:python:python:3.1.1",
        "cpe:/a:python:python:3.1.2",
        "cpe:/a:python:python:3.1.3",
        "cpe:/a:python:python:3.1.4",
        "cpe:/a:python:python:3.1.5",
        "cpe:/a:python:python:3.1.2150::~~~~x64~",
        "cpe:/a:python:python:3.2",
        "cpe:/a:python:python:3.2:alpha",
        "cpe:/a:python:python:3.2.0",
        "cpe:/a:python:python:3.2.1",
        "cpe:/a:python:python:3.2.2",
        "cpe:/a:python:python:3.2.3",
        "cpe:/a:python:python:3.2.4",
        "cpe:/a:python:python:3.2.5",
        "cpe:/a:python:python:3.2.2150",
        "cpe:/a:python:python:3.3",
        "cpe:/a:python:python:3.3:beta2",
        "cpe:/a:python:python:3.3.0",
        "cpe:/a:python:python:3.3.1",
        "cpe:/a:python:python:3.3.2",
        "cpe:/a:python:python:3.3.3",
        "cpe:/a:python:python:3.4:alpha1"
    ]
}